{"version":3,"file":"static/js/607.90913d3f.chunk.js","mappings":"iSAEaA,EAAMC,EAAAA,GAAAA,GAAH,0FAMHC,EAAOD,EAAAA,GAAAA,EAAH,6FAMJE,EAAQF,EAAAA,GAAAA,EAAH,iEAKLG,EAAWH,EAAAA,GAAAA,GAAH,2C,SCZN,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,iBAAaH,EAAb,4BAAwCI,EAAAA,GADnC,wCAKd,8FACQC,EAAAA,GAAAA,IACCF,GACJG,MAAK,SAAAC,GACJZ,EAAWY,EAAIC,KAAKC,SACpBZ,GAAa,EACd,IACAa,OAAM,SAAAZ,GACLC,EAASD,EAAMa,QAChB,IATL,2CALc,wBAEdd,GAAa,GAFC,mCAGde,EAcD,GAAE,KAGD,2BACGhB,IAAa,SAAC,KAAD,CAAeiB,YAAY,YACxCf,IAAS,2EACV,SAACX,EAAD,UACsB,IAAnBO,EAAQoB,OACPpB,EAAQqB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACV,UAAC3B,EAAD,YACE,UAACD,EAAD,sBAAgB0B,MAChB,SAAC3B,EAAD,UAAO6B,MAFMD,EADL,KAOZ,SAAC5B,EAAD,4DAKT,C,4DChDDgB,GAAAA,SAAAA,QAAyB,+BAClB,IAAMD,EAAM,kC","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.ul`\n  margin-top: 30px;\n  margin-left: 30px;\n  list-style: inside;\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  padding-right: 30px;\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ListItem = styled.li`\n  display: block;\n`;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { KEY } from '../service/api';\nimport { Box, Text, Title, ListItem } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const url = `/movie/${movieId}/reviews?api_key=${KEY}`;\n    setIsLoading(true);\n    response();\n\n    async function response() {\n      await axios\n        .get(url)\n        .then(res => {\n          setReviews(res.data.results);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          setError(error.message);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <RotatingLines strokeColor=\"#4A9E48\" />}\n      {error && <p>Ooops! Something went wrong. Please, try again</p>}\n      <Box>\n        {reviews.length !== 0 ? (\n          reviews.map(({ author, id, content }) => (\n            <ListItem key={id}>\n              <Title>Author: {author}</Title>\n              <Text>{content}</Text>\n            </ListItem>\n          ))\n        ) : (\n          <Text>We don't have any reviews for this movie.</Text>\n        )}\n      </Box>\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const KEY = '9c6707bc7b9a631e4bf832ffb39cd7a0';\n"],"names":["Box","styled","Text","Title","ListItem","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","url","KEY","axios","then","res","data","results","catch","message","response","strokeColor","length","map","author","id","content"],"sourceRoot":""}