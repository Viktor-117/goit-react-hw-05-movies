{"version":3,"file":"static/js/202.a63e51a9.chunk.js","mappings":"wTAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8OAYTE,EAAQF,EAAAA,GAAAA,IAAH,qFAMLG,EAASH,EAAAA,GAAAA,IAAH,sBAENI,EAAUJ,EAAAA,GAAAA,IAAH,mEAKPK,EAAQL,EAAAA,GAAAA,IAAH,iEAKLM,EAAON,EAAAA,GAAAA,EAAH,qEAKJO,EAASP,EAAAA,GAAAA,IAAH,sFAMNQ,EAASR,EAAAA,GAAAA,IAAH,sFAMNS,EAAgBT,EAAAA,GAAAA,IAAH,oIAObU,EAAiBV,EAAAA,GAAAA,GAAH,0FAMdW,GAAaX,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sB,SC5CR,SAASY,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAmBF,EAAAA,EAAAA,WAASG,EAAAA,EAAAA,OAArBC,GAAP,eACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,IAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,iBAAaH,EAAb,oBAAgCI,EAAAA,GAD3B,wCAKd,8FACQC,EAAAA,GAAAA,IACCF,GACJG,MAAK,SAAAC,GACJd,EAASc,EAAIC,MACbX,GAAa,EACd,IACAY,OAAM,SAAAX,GACLC,EAASD,EAAMY,QAChB,IATL,2CALc,wBAEdb,GAAa,GAFC,mCAGdc,EAaD,GAAE,CAACX,KAECR,EACH,OAAO,KAGT,IAAQoB,EAAuDpB,EAAvDoB,YAAaC,EAA0CrB,EAA1CqB,MAAOC,EAAmCtB,EAAnCsB,aAAcC,EAAqBvB,EAArBuB,SAAUC,EAAWxB,EAAXwB,OAC9CC,EAAY,oBAAGtB,EAASuB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,4BACE,SAAC1C,EAAD,CAAW2C,GAAIH,EAAf,qBACCrB,IAAa,SAAC,KAAD,CAAeyB,YAAY,YACxCvB,IAAS,0EACTN,IACC,UAACZ,EAAD,YACE,SAACC,EAAD,CACEyC,IAAG,yDAAoDV,GACvDW,IAAKV,KAEP,UAAC/B,EAAD,YACE,SAACC,EAAD,UAAQ8B,KACR,UAAC7B,EAAD,0BAAmB8B,MACnB,SAAC7B,EAAD,wBACA,SAACD,EAAD,UAAO+B,KACP,SAAC7B,EAAD,sBACA,SAACF,EAAD,UAAOgC,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAIlD,UAACxC,EAAD,YACE,SAACH,EAAD,sCACA,UAACI,EAAD,YACE,yBACE,SAACC,EAAD,CAAY+B,GAAI,OAAhB,qBAEF,yBACE,SAAC/B,EAAD,CAAY+B,GAAI,UAAhB,8BAIN,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ReturnBtn = styled(NavLink)`\n  display: inline-block;\n  margin-top: 20px;\n  margin-left: 30px;\n  background-color: #efefef;\n  padding: 2px 6px;\n  text-decoration: none;\n  color: black;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const Thumb = styled.div`\n  margin-top: 20px;\n  margin-left: 30px;\n  display: flex;\n`;\n\nexport const Poster = styled.img``;\n\nexport const InfoBox = styled.div`\n  margin-left: 20px;\n  margin-top: 20px;\n`;\n\nexport const Title = styled.div`\n  font-size: 26px;\n  font-weight: 700;\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  padding-right: 30px;\n`;\n\nexport const Title2 = styled.div`\n  margin-top: 20px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const Title3 = styled.div`\n  margin-top: 20px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin-top: 40px;\n  padding: 30px 0;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: inside;\n  margin-left: 20px;\n  margin-top: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)``;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { KEY } from '../../components/service/api';\nimport {\n  ReturnBtn,\n  Thumb,\n  Poster,\n  InfoBox,\n  Title,\n  Text,\n  Title2,\n  Title3,\n  AdditionalBox,\n  AdditionalList,\n  StyledLink,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [location] = useState(useLocation());\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const url = `/movie/${movieId}?api_key=${KEY}`;\n    setIsLoading(true);\n    response();\n\n    async function response() {\n      await axios\n        .get(url)\n        .then(res => {\n          setMovie(res.data);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          setError(error.message);\n        });\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <ReturnBtn to={backLinkHref}>Go back</ReturnBtn>\n      {isLoading && <RotatingLines strokeColor=\"#4A9E48\" />}\n      {error && <p>Ooops! Something went wrong. Please, try again</p>}\n      {movie && (\n        <Thumb>\n          <Poster\n            src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`}\n            alt={title}\n          />\n          <InfoBox>\n            <Title>{title}</Title>\n            <Text>User score: {vote_average}</Text>\n            <Title2>Overview</Title2>\n            <Text>{overview}</Text>\n            <Title3>Genres</Title3>\n            <Text>{genres.map(genre => genre.name).join(', ')}</Text>\n          </InfoBox>\n        </Thumb>\n      )}\n      <AdditionalBox>\n        <Text>Additional information</Text>\n        <AdditionalList>\n          <li>\n            <StyledLink to={'cast'}>Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to={'reviews'}>Reviews</StyledLink>\n          </li>\n        </AdditionalList>\n      </AdditionalBox>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["ReturnBtn","styled","NavLink","Thumb","Poster","InfoBox","Title","Text","Title2","Title3","AdditionalBox","AdditionalList","StyledLink","MovieDetails","useState","movie","setMovie","useLocation","location","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","url","KEY","axios","then","res","data","catch","message","response","poster_path","title","vote_average","overview","genres","backLinkHref","state","from","to","strokeColor","src","alt","map","genre","name","join"],"sourceRoot":""}